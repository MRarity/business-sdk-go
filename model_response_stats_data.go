/*
Snap Conversions API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package businesssdk

import (
	"encoding/json"
)

// ResponseStatsData struct for ResponseStatsData
type ResponseStatsData struct {
	Test *ResponseStatsTest `json:"test,omitempty"`
	Live *ResponseStatsTest `json:"live,omitempty"`
}

// NewResponseStatsData instantiates a new ResponseStatsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStatsData() *ResponseStatsData {
	this := ResponseStatsData{}
	return &this
}

// NewResponseStatsDataWithDefaults instantiates a new ResponseStatsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStatsDataWithDefaults() *ResponseStatsData {
	this := ResponseStatsData{}
	return &this
}

// GetTest returns the Test field value if set, zero value otherwise.
func (o *ResponseStatsData) GetTest() ResponseStatsTest {
	if o == nil || o.Test == nil {
		var ret ResponseStatsTest
		return ret
	}
	return *o.Test
}

// GetTestOk returns a tuple with the Test field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStatsData) GetTestOk() (*ResponseStatsTest, bool) {
	if o == nil || o.Test == nil {
		return nil, false
	}
	return o.Test, true
}

// HasTest returns a boolean if a field has been set.
func (o *ResponseStatsData) HasTest() bool {
	if o != nil && o.Test != nil {
		return true
	}

	return false
}

// SetTest gets a reference to the given ResponseStatsTest and assigns it to the Test field.
func (o *ResponseStatsData) SetTest(v ResponseStatsTest) {
	o.Test = &v
}

// GetLive returns the Live field value if set, zero value otherwise.
func (o *ResponseStatsData) GetLive() ResponseStatsTest {
	if o == nil || o.Live == nil {
		var ret ResponseStatsTest
		return ret
	}
	return *o.Live
}

// GetLiveOk returns a tuple with the Live field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStatsData) GetLiveOk() (*ResponseStatsTest, bool) {
	if o == nil || o.Live == nil {
		return nil, false
	}
	return o.Live, true
}

// HasLive returns a boolean if a field has been set.
func (o *ResponseStatsData) HasLive() bool {
	if o != nil && o.Live != nil {
		return true
	}

	return false
}

// SetLive gets a reference to the given ResponseStatsTest and assigns it to the Live field.
func (o *ResponseStatsData) SetLive(v ResponseStatsTest) {
	o.Live = &v
}

func (o ResponseStatsData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Test != nil {
		toSerialize["test"] = o.Test
	}
	if o.Live != nil {
		toSerialize["live"] = o.Live
	}
	return json.Marshal(toSerialize)
}

type NullableResponseStatsData struct {
	value *ResponseStatsData
	isSet bool
}

func (v NullableResponseStatsData) Get() *ResponseStatsData {
	return v.value
}

func (v *NullableResponseStatsData) Set(val *ResponseStatsData) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStatsData) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStatsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStatsData(val *ResponseStatsData) *NullableResponseStatsData {
	return &NullableResponseStatsData{value: val, isSet: true}
}

func (v NullableResponseStatsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStatsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


