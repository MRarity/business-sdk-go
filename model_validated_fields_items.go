/*
Snap Conversions API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package businesssdk

import (
	"encoding/json"
)

// ValidatedFieldsItems struct for ValidatedFieldsItems
type ValidatedFieldsItems struct {
	PixelId *string `json:"pixel_id,omitempty"`
	SnapAppId *string `json:"snap_app_id,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Price *string `json:"price,omitempty"`
	EventConversionType *string `json:"event_conversion_type,omitempty"`
	EventType *string `json:"event_type,omitempty"`
}

// NewValidatedFieldsItems instantiates a new ValidatedFieldsItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatedFieldsItems() *ValidatedFieldsItems {
	this := ValidatedFieldsItems{}
	return &this
}

// NewValidatedFieldsItemsWithDefaults instantiates a new ValidatedFieldsItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatedFieldsItemsWithDefaults() *ValidatedFieldsItems {
	this := ValidatedFieldsItems{}
	return &this
}

// GetPixelId returns the PixelId field value if set, zero value otherwise.
func (o *ValidatedFieldsItems) GetPixelId() string {
	if o == nil || o.PixelId == nil {
		var ret string
		return ret
	}
	return *o.PixelId
}

// GetPixelIdOk returns a tuple with the PixelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedFieldsItems) GetPixelIdOk() (*string, bool) {
	if o == nil || o.PixelId == nil {
		return nil, false
	}
	return o.PixelId, true
}

// HasPixelId returns a boolean if a field has been set.
func (o *ValidatedFieldsItems) HasPixelId() bool {
	if o != nil && o.PixelId != nil {
		return true
	}

	return false
}

// SetPixelId gets a reference to the given string and assigns it to the PixelId field.
func (o *ValidatedFieldsItems) SetPixelId(v string) {
	o.PixelId = &v
}

// GetSnapAppId returns the SnapAppId field value if set, zero value otherwise.
func (o *ValidatedFieldsItems) GetSnapAppId() string {
	if o == nil || o.SnapAppId == nil {
		var ret string
		return ret
	}
	return *o.SnapAppId
}

// GetSnapAppIdOk returns a tuple with the SnapAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedFieldsItems) GetSnapAppIdOk() (*string, bool) {
	if o == nil || o.SnapAppId == nil {
		return nil, false
	}
	return o.SnapAppId, true
}

// HasSnapAppId returns a boolean if a field has been set.
func (o *ValidatedFieldsItems) HasSnapAppId() bool {
	if o != nil && o.SnapAppId != nil {
		return true
	}

	return false
}

// SetSnapAppId gets a reference to the given string and assigns it to the SnapAppId field.
func (o *ValidatedFieldsItems) SetSnapAppId(v string) {
	o.SnapAppId = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ValidatedFieldsItems) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedFieldsItems) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ValidatedFieldsItems) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ValidatedFieldsItems) SetCurrency(v string) {
	o.Currency = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ValidatedFieldsItems) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedFieldsItems) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ValidatedFieldsItems) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *ValidatedFieldsItems) SetPrice(v string) {
	o.Price = &v
}

// GetEventConversionType returns the EventConversionType field value if set, zero value otherwise.
func (o *ValidatedFieldsItems) GetEventConversionType() string {
	if o == nil || o.EventConversionType == nil {
		var ret string
		return ret
	}
	return *o.EventConversionType
}

// GetEventConversionTypeOk returns a tuple with the EventConversionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedFieldsItems) GetEventConversionTypeOk() (*string, bool) {
	if o == nil || o.EventConversionType == nil {
		return nil, false
	}
	return o.EventConversionType, true
}

// HasEventConversionType returns a boolean if a field has been set.
func (o *ValidatedFieldsItems) HasEventConversionType() bool {
	if o != nil && o.EventConversionType != nil {
		return true
	}

	return false
}

// SetEventConversionType gets a reference to the given string and assigns it to the EventConversionType field.
func (o *ValidatedFieldsItems) SetEventConversionType(v string) {
	o.EventConversionType = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *ValidatedFieldsItems) GetEventType() string {
	if o == nil || o.EventType == nil {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedFieldsItems) GetEventTypeOk() (*string, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *ValidatedFieldsItems) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *ValidatedFieldsItems) SetEventType(v string) {
	o.EventType = &v
}

func (o ValidatedFieldsItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PixelId != nil {
		toSerialize["pixel_id"] = o.PixelId
	}
	if o.SnapAppId != nil {
		toSerialize["snap_app_id"] = o.SnapAppId
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.EventConversionType != nil {
		toSerialize["event_conversion_type"] = o.EventConversionType
	}
	if o.EventType != nil {
		toSerialize["event_type"] = o.EventType
	}
	return json.Marshal(toSerialize)
}

type NullableValidatedFieldsItems struct {
	value *ValidatedFieldsItems
	isSet bool
}

func (v NullableValidatedFieldsItems) Get() *ValidatedFieldsItems {
	return v.value
}

func (v *NullableValidatedFieldsItems) Set(val *ValidatedFieldsItems) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatedFieldsItems) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatedFieldsItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatedFieldsItems(val *ValidatedFieldsItems) *NullableValidatedFieldsItems {
	return &NullableValidatedFieldsItems{value: val, isSet: true}
}

func (v NullableValidatedFieldsItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatedFieldsItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


